{"version":3,"names":[],"mappings":"","sources":["gamereport.js"],"sourcesContent":["\"use strict\";\n\ndocument.addEventListener(\"DOMContentLoaded\", function (event) {\n  //console.log(\"DOM fully loaded and parsed\");\n  console.log(teamkey, gameId, season); // ============= definitions =================\n  // var url = \"http://localhost/handball/hb_joomla3/hbdata/hkog.json\";\n\n  var url = './index.php?option=com_hbmanager&task=getGameData&format=raw&teamkey=' + teamkey + '&gameId=' + gameId;\n  var gamesData;\n  d3.json(url, function (error, data) {\n    if (error != null) {\n      console.log(error);\n    }\n\n    ; // console.log(data);\n\n    if (typeof data != 'undefined' || data.playerdata !== null) {\n      gamesData = data; // console.log(gamesData);\n\n      calcDimensions();\n      initializeGraph();\n      updateData(gameId, loadData);\n    } else {\n      console.log('No data');\n    }\n  }); // dimensions\n\n  var margin = {\n    top: 5,\n    right: 20,\n    bottom: 10,\n    left: 20\n  };\n  var frameWidth = 800;\n  var frameHeight = 900;\n  var width, height;\n  var chartMargin = {\n    top: 30,\n    right: 70,\n    bottom: 20,\n    left: 220\n  };\n  var chartWidth, chartHeight;\n  var percent_left_col, width_left_col;\n  var percent_middle_col, width_middle_col;\n  var percent_right_col, width_right_col;\n  var percent_top_row, height_top_row;\n  var percent_bottom_row, height_bottom_row;\n  var numGoals = 10;\n  var yMin = 0;\n  var yMax = 3600;\n  var startTime = yMax; // slider parameters\n\n  var sliderWidth, sliderHeight, sliderMin, sliderMax, sliderstart, sliderOffsetLeft, sliderOffsetTop, handleWidth; // scoreboard\n\n  var sbheight = 100;\n  var sbwidth = 150;\n  var sbtopmargin = 5;\n  var sbscoreline = 88;\n  var sbTime = 37;\n  var sbHome = 53;\n  var sbAway = 135;\n  var sbradius = 8;\n  var sboffset = 2; // url to sprite sheet file\n  // var players_sprite = 'http://localhost/handball/hb_joomla3/hbdata/playersprites.png';\n\n  var default_players_sprite = false;\n  var players_sprite = '../../../hbdata/spritesheets/' + teamkey + '_playersprites_' + season + '.png'; // works online\n\n  var playersImage = new Image();\n  playersImage.src = players_sprite;\n\n  playersImage.onerror = function () {\n    // console.log(JSON.stringify(players_sprite) + ' not found');\n    players_sprite = players_sprite.replace('../../', ''); // playersImage = new Image();\n\n    playersImage.src = players_sprite;\n\n    playersImage.onerror = function () {\n      // console.log(JSON.stringify(players_sprite) + ' not found');\n      players_sprite = '../../../media/com_hbmanager/images/default_playersprites.png';\n      default_players_sprite = true; // playersImage = new Image();\n\n      playersImage.src = players_sprite;\n\n      playersImage.onerror = function () {\n        // console.log(JSON.stringify(players_sprite) + ' not found');\n        players_sprite = players_sprite.replace('../../', '');\n      };\n    };\n  };\n\n  var picWidthFactor = 1; // var players_sprite = '../hbdata/spritesheets/'+teamkey+'_playersprites_'+season+'.png'; // works local\n  // console.log(players_sprite);\n  // console.log(JSON.stringify(players_sprite));\n  // player profiles\n\n  var picRadius = 22;\n  var profilesOffset = {\n    \"left\": 30,\n    \"top\": margin.top\n  };\n\n  function calcDimensions() {\n    frameWidth = parseInt(d3.select('#gamegraphframe').style('width'), 10); // console.log(frameWidth);\n\n    width = frameWidth - margin.left - margin.right;\n    height = frameHeight - margin.top - margin.bottom;\n\n    if (frameWidth < 500) {\n      percent_left_col = 0;\n    } else {\n      percent_left_col = 30;\n    }\n\n    percent_middle_col = 25;\n    percent_right_col = 100 - (percent_left_col + percent_middle_col);\n    percent_top_row = 12;\n    percent_bottom_row = 100 - percent_top_row;\n    width_left_col = percent_left_col * 0.01 * width;\n    width_middle_col = percent_middle_col * 0.01 * width;\n    width_right_col = percent_right_col * 0.01 * width;\n    height_top_row = percent_top_row * 0.01 * height;\n    height_bottom_row = percent_bottom_row * 0.01 * height;\n    chartWidth = width_right_col + width_middle_col - chartMargin.left - chartMargin.right;\n    chartHeight = height_bottom_row - chartMargin.top - chartMargin.bottom; // slider parameters\n\n    sliderWidth = 50;\n    sliderHeight = chartHeight;\n    sliderMin = yMin;\n    sliderMax = yMax;\n    sliderstart = startTime;\n    sliderOffsetLeft = chartWidth + chartMargin.left + 10;\n    sliderOffsetTop = chartMargin.top;\n    handleWidth = 20;\n  }\n\n  function resize() {\n    // console.log('resize');\n    calcDimensions();\n    scoreboard.attr(\"transform\", \"translate(\" + (-width_middle_col + chartMargin.left + chartWidth / 2 - sbwidth / 2) + \",\" + sbtopmargin + \")\");\n    chartsvg.attr(\"width\", frameWidth).attr(\"height\", frameHeight);\n    section_gameinfo.attr(\"transform\", \"translate(\" + margin.left + \",\" + margin.top + \")\");\n    rect_gameinfo.attr(\"width\", width_left_col + width_middle_col).attr(\"height\", height_top_row);\n    section_display.attr(\"transform\", \"translate(\" + (margin.left + width_left_col + width_middle_col) + \",\" + margin.top + \")\");\n    rect_display.attr(\"width\", width_right_col).attr(\"height\", height_top_row);\n    section_players.attr(\"transform\", \"translate(\" + margin.left + \",\" + (margin.top + height_top_row) + \")\");\n    rect_players.attr(\"width\", width_left_col).attr(\"height\", height_bottom_row);\n    section_graph.attr(\"transform\", \"translate(\" + (margin.left + width_left_col) + \",\" + (margin.top + height_top_row) + \")\");\n    rect_graph.attr(\"width\", width_middle_col + width_right_col).attr(\"height\", height_bottom_row); // resize chart\n\n    xScale.domain([-numGoals, numGoals]).range([0, chartWidth]);\n    yScale.domain([yMin, yMax]).range([0, chartHeight]);\n    xAxis.call(getAxisX.tickValues(getGoalTicks(numGoals, chartWidth)));\n    yAxis.call(getAxisY);\n    xGrid.call(getGridX.tickSize(-chartHeight, 0, 0).tickValues(getGoalTicks(numGoals)));\n    yGrid.call(getGridY.tickSize(-chartWidth, 0, 0));\n    centerline.attr(\"d\", valueline([{\n      \"time\": 0,\n      \"scoreDiff\": 0\n    }, {\n      \"time\": yMax,\n      \"scoreDiff\": 0\n    }]));\n    halftimeLine.attr(\"d\", valueline([{\n      \"time\": yMax / 2,\n      \"scoreDiff\": -numGoals\n    }, {\n      \"time\": yMax / 2,\n      \"scoreDiff\": numGoals\n    }]));\n    sliderBox.attr(\"transform\", \"translate(\" + sliderOffsetLeft + \",\" + sliderOffsetTop + \")\");\n    populateData(gamedata, startTime);\n  } // =========== polyfill ============\n\n\n  if (!Array.prototype.findIndex) {\n    Object.defineProperty(Array.prototype, 'findIndex', {\n      value: function value(predicate) {\n        'use strict';\n\n        if (this == null) {\n          throw new TypeError('Array.prototype.findIndex called on null or undefined');\n        }\n\n        if (typeof predicate !== 'function') {\n          throw new TypeError('predicate must be a function');\n        }\n\n        var list = Object(this);\n        var length = list.length >>> 0;\n        var thisArg = arguments[1];\n        var value;\n\n        for (var i = 0; i < length; i++) {\n          value = list[i];\n\n          if (predicate.call(thisArg, value, i, list)) {\n            return i;\n          }\n        }\n\n        return -1;\n      },\n      enumerable: false,\n      configurable: false,\n      writable: false\n    });\n  } // Add a getElementsByClassName function if the browser doesn't have one\n  // Limitation: only works with one class name\n  // Copyright: Eike Send http://eike.se/nd\n  // License: MIT License\n  // copied from https://gist.github.com/eikes/2299607\n\n\n  if (!document.getElementsByClassName) {\n    document.getElementsByClassName = function (search) {\n      var d = document,\n          elements,\n          pattern,\n          i,\n          results = [];\n\n      if (d.querySelectorAll) {\n        // IE8\n        return d.querySelectorAll(\".\" + search);\n      }\n\n      if (d.evaluate) {\n        // IE6, IE7\n        pattern = \".//*[contains(concat(' ', @class, ' '), ' \" + search + \" ')]\";\n        elements = d.evaluate(pattern, d, null, 0, null);\n\n        while (i = elements.iterateNext()) {\n          results.push(i);\n        }\n      } else {\n        elements = d.getElementsByTagName(\"*\");\n        pattern = new RegExp(\"(^|\\\\s)\" + search + \"(\\\\s|$)\");\n\n        for (i = 0; i < elements.length; i++) {\n          if (pattern.test(elements[i].className)) {\n            results.push(elements[i]);\n          }\n        }\n      }\n\n      return results;\n    };\n  }\n\n  if (SVGElement.prototype.getElementsByClassName === undefined) {\n    SVGElement.prototype.getElementsByClassName = function (className) {\n      return this.querySelectorAll('.' + className);\n    };\n  } // ----------- END polyfill --------------------\n\n\n  var ballIconPath = \"m 13.115534,9.9881529 1.57002,1.3488911 M 2.884465,6.924534 1.3144455,5.5756426 m 6.6710961,1.5572762 0,2.6626503 M 11.092465,14.955035 9.3489573,13.72121 10.408369,11.342436 m 2.707966,-1.33957 -2.717871,1.335272 L 7.9999995,9.7885418 5.6015341,11.338138 2.8836636,10.002866 c -0.031955,-1.0322124 -0.077459,-2.0608889 0,-3.0930452 L 5.6015341,5.5745493 7.9999995,7.1241448 10.398464,5.5745493 13.116335,6.9098208 c 0.0671,1.0315972 0.03074,2.0613406 0,3.0930452 z M 2.8844639,9.9881529 1.3144444,11.337044 M 4.9075332,14.955035 6.6510408,13.72121 5.591629,11.342436 m 1.0523066,2.341088 c 0.9040461,-0.0071 1.80808,-0.0032 2.7121269,0 m 3.7594715,-6.75899 1.57002,-1.3488914 M 11.092465,1.9576518 9.3489573,3.1914774 10.408369,5.570251 M 4.9075332,1.9576518 6.6510408,3.1914774 5.591629,5.570251 M 6.6439356,3.2291631 c 0.9040472,0.00616 1.808079,0.0028 2.7121269,0\";\n  var suspensionIconPath = \"m 1.5479708,2.0469633 c -0.0055,-0.3481 0.09473,-0.99431 0.757778,-1.08197996 0.663049,-0.0877 0.984979,0.41393996 1.023309,0.83681996 0.145432,1.6045 0.340924,3.35834 0.521594,5.3018 0.197975,-1.82049 0.271689,-3.59258 0.565139,-5.3573 0.05933,-0.35675 0.344945,-0.79349996 0.86522,-0.76732996 0.422562,0.0213 0.853325,0.47233996 0.837769,0.90341996 -0.07695,2.1324 -0.23198,4.58337 -0.267896,5.89491 0.02371,-0.7087 0.700297,-1.20414 1.250499,-1.08488 0.843158,0.18277 0.654307,1.0968 0.537517,1.70741 0.253651,-0.38414 0.722906,-0.78948 1.382941,-0.45856 0.660035,0.33092 0.416408,1.87304 0.427984,2.2358497 0.04906,1.53732 0.02933,0.97655 -0.152256,2.65827 -0.112823,1.04489 -0.764038,2.08284 -0.941425,3.09682 l -6.026729,0.02413 c -0.167857,6.7e-4 -1.239828,-2.40645 -1.75789398,-3.57345 -0.389664,-0.87776 1.23538198,-3.8101997 1.23538198,-3.8101997 0,0 -0.221374,-4.16231 -0.258932,-6.52573 z\"; // ========= helpers =============\n\n  function formatTime(d) {\n    var min = ~~(d / 60);\n    var sec = ('00' + ~~(d % 60)).substr(-2);\n    return min + \":\" + sec;\n  }\n\n  function getGoalTicks() {\n    var numGoals = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 10;\n    var width = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\n    var goalTicks = [];\n    var j = 0;\n    var d = Math.ceil(2 * numGoals / (width / 20)); // console.log(d);\n\n    for (var i = -numGoals; i <= numGoals; i++) {\n      // console.log(width/numGoals);\n      if (i % d == 0 | width == 0) {\n        goalTicks[j++] = i;\n      }\n    } //console.log(goalTicks);\n\n\n    return goalTicks;\n  }\n\n  function getTimeTicks() {\n    var timeTicks = new Array();\n\n    for (i = 0; i < 13; i++) {\n      timeTicks[i] = i * 300;\n    }\n\n    return timeTicks;\n  }\n\n  function filterData(data, endTime) {\n    // console.log(data)\n    //TODO use .filter() instead\n    var endTime = typeof endTime !== 'undefined' ? endTime : yMax;\n    return data.filter(function (d) {\n      var curr = d.time;\n      return d.scoreChange && curr <= endTime;\n    });\n  }\n\n  function getMaxGoalDiff(gamedata) {\n    if (gamedata !== null) {\n      var maxDiff = 0;\n\n      for (var i = gamedata.length - 1; i >= 0; i--) {\n        //console.log(Math.abs(gamedata[i].scoreDiff));\n        if (Math.abs(gamedata[i].scoreDiff) > maxDiff) {\n          maxDiff = Math.abs(gamedata[i].scoreDiff);\n        }\n      }\n\n      return maxDiff;\n    }\n\n    return 0;\n  }\n\n  function getPlayerAlias(name) {\n    // console.log(name);\n    if (name !== null) {\n      // escape regex characters\n      var alias = name.replace(/[.*+?^${}()|[\\]\\\\]/g, '\\\\$&');\n      alias = alias.trim(); // ÄäÖöÜüß\n\n      alias = alias.replace(/Ä/g, 'Ae');\n      alias = alias.replace(/ä/g, 'ae');\n      alias = alias.replace(/Ö/g, 'Oe');\n      alias = alias.replace(/ö/g, 'oe');\n      alias = alias.replace(/Ü/g, 'Ue');\n      alias = alias.replace(/ü/g, 'ue');\n      alias = alias.replace(/ß/g, 'ss');\n      alias = alias.replace(/ /g, '-');\n      alias = alias.toLowerCase(); // console.log(name, alias);\n\n      return alias;\n    }\n\n    return '';\n  }\n\n  function getTeamIndicator(d) {\n    if (d > 0) {\n      return \"home\";\n    }\n\n    if (d < 0) {\n      return \"away\";\n    }\n\n    if (d == 0) {\n      return \"neutral\";\n    }\n  }\n\n  function getActionText(item) {\n    //format text for action\n    var text = item.text;\n\n    if (item.name !== null) {\n      text = item.name;\n    }\n\n    if (item.category === 'timeout') {\n      text = 'Auszeit';\n    }\n\n    return text;\n  }\n\n  function getInfoText(item) {\n    //format text for action\n    var text = '';\n\n    if (item.scoreChange === 1) {\n      text = \"Tor zum  \" + item.scoreHome + \":\" + item.scoreAway;\n\n      if (item.seven) {\n        text = text + \" (7m)\";\n      }\n    }\n\n    if (item.category === 'yellow') {\n      text = \"Gelbe Karte\";\n    }\n\n    if (item.category === 'red') {\n      text = \"Rote Karte\";\n    }\n\n    if (item.category === 'suspension') {\n      text = \"2-min-Strafe\";\n    }\n\n    if (item.text.indexOf('Spiel') === 0) {\n      text = '';\n    }\n\n    if (item.category === 'timeout') {\n      text = item.text.replace('Auszeit ', '');\n    }\n\n    return text;\n  }\n\n  function findLatestAction(data, endTime) {\n    var recent = 0;\n    data.forEach(function (d, i) {\n      if (d.time > endTime) {\n        return recent;\n      }\n\n      recent = i;\n    });\n    return recent; //TODO fix race error, return in callback\n  }\n\n  function addPlayersPortraits(playersdata, picarray) {\n    // console.log(picarray);\n    playersdata.forEach(function (element, i) {\n      // console.log(element);\n      var picIndex;\n\n      if (default_players_sprite) {\n        picIndex = 0;\n      } else {\n        picIndex = picarray.findIndex(function (d) {\n          return d === element.alias;\n        }); // console.log(picIndex);\n\n        if (picIndex == '-1') {\n          picIndex = picarray.findIndex(function (d) {\n            return d === 'dummy';\n          });\n        }\n      }\n\n      playersdata[i].picIndex = picIndex;\n    }); // console.log(playersdata);\n\n    return playersdata;\n  }\n\n  function getPlayersPicWidthFactor() {\n    if (default_players_sprite) return 1;\n    return picarray.length;\n  }\n\n  function getIconX(player, category) {\n    var x = -1;\n    var delta = 15;\n    var cats = ['yellow', 'suspension1', 'suspension2', 'suspension3', 'red'];\n\n    for (var i = 0; i <= category; i++) {\n      if (player[cats[i]]) {\n        x++;\n      }\n    }\n\n    return x * delta;\n  }\n\n  function addPlayerProfiles(playerdata) {\n    var playerprofiles = playerProfileBox.selectAll(\".test\").data(playerdata).enter().append(\"g\").attr(\"id\", function (d) {\n      return \"profile-\" + d.alias;\n    }).attr(\"class\", \"pic\").attr(\"transform\", function (d, i) {\n      return \"translate(\" + 0 + \",\" + i * (2.3 * picRadius) + \")\";\n    }).on(\"mouseover\", function (d) {\n      // console.log(d.alias); \n      // TODO why no bechthold\n      showScore(d.alias);\n    }).on(\"mouseout\", function (d) {\n      hideScore();\n    });\n    playerprofiles.append(\"defs\").append(\"pattern\").attr(\"id\", function (d, i) {\n      return \"profilepic-\" + i;\n    }).attr(\"height\", 1).attr(\"width\", 1).attr(\"x\", \"0\").attr(\"y\", \"0\").append(\"image\").attr(\"x\", function (d, i) {\n      return -d.picIndex * (picRadius * 2);\n    }).attr(\"y\", 0).attr(\"width\", picRadius * 2 * picWidthFactor).attr(\"height\", picRadius * 2).attr(\"xlink:href\", players_sprite);\n    playerprofiles.append(\"circle\").attr(\"r\", picRadius).attr(\"cx\", picRadius + 40).attr(\"cy\", picRadius).attr(\"fill\", function (d, i) {\n      return \"url(#profilepic-\" + i + \")\";\n    });\n    playerprofiles.append(\"text\").attr(\"class\", \"action number bg\").attr(\"x\", 50).attr(\"y\", 40).text(function (d) {\n      return d.number;\n    });\n    playerprofiles.append(\"text\").attr(\"class\", \"action number fg\").attr(\"x\", 52).attr(\"y\", 42).text(function (d) {\n      return d.number;\n    });\n    playerprofiles.append(\"text\").attr(\"class\", \"profile name\").attr(\"x\", picRadius * 2.5 + 40).attr(\"y\", 12).text(function (d) {\n      return d.name;\n    });\n    var goalicons = playerprofiles.append(\"g\").attr(\"class\", \"icons\").attr(\"transform\", function (d) {\n      var x = 0;\n      x = picRadius * 2.5 + 45;\n      return \"translate(\" + x + \",\" + 20 + \")\";\n    }).style(\"opacity\", 0.8);\n    var playericons = playerprofiles.append(\"g\").attr(\"class\", \"icons\").attr(\"transform\", function (d) {\n      var x = 0; // console.log('#profile-'+d.alias);\n\n      var bbox = document.getElementById('profile-' + d.alias).getElementsByClassName('name')[0].getBBox(); // console.log(bbox.width);\n\n      x = picRadius * 2.5 + 40 + bbox.width + 10;\n      var y = -2;\n      return \"translate(\" + x + \",\" + y + \")\";\n    }).style(\"opacity\", 0.8);\n    playericons.filter(function (d) {\n      // console.log(d.yellow, Boolean(d.yellow));\n      return d.yellow;\n    }).append('rect').attr(\"class\", \"card yellowcard\").attr(\"width\", 10).attr(\"height\", 15).attr(\"x\", function (d) {\n      return getIconX(d, 0);\n    }).attr(\"y\", 0.5).attr(\"rx\", 2).attr(\"ry\", 2);\n    playericons.filter(function (d) {\n      // console.log(d.red);\n      return d.red;\n    }).append('rect').attr(\"class\", \"card redcard\").attr(\"width\", 10).attr(\"height\", 15).attr(\"x\", function (d) {\n      return getIconX(d, 4);\n    }).attr(\"y\", 0.5).attr(\"rx\", 2).attr(\"ry\", 2);\n    var ball = goalicons.filter(function (d) {\n      // console.log(d);\n      return d.goals;\n    }).append(\"g\").attr(\"class\", \"ball\").attr(\"transform\", \"translate(\" + 0 + \",\" + 0 + \"), scale(0.7)\");\n    ball.each(function (d) {\n      var g = d3.select(this); // console.log(d3.select(\"#profile-luis-herre\").data());\n      // console.log(g.data()[0].goals);\n\n      var goals = g.data()[0].goals;\n\n      for (var i = 0; i < goals; i++) {\n        var innerG = g.append(\"g\").attr(\"class\", \"goal-\" + i).attr(\"transform\", \"translate( \" + 18 * i + \",\" + 0 + \" )\");\n        innerG.append(\"circle\").attr(\"class\", \"goal-\" + i).attr(\"cx\", 8).attr(\"cy\", 8.45).attr(\"r\", 7.5);\n        innerG.append(\"path\").attr(\"d\", ballIconPath);\n      }\n    });\n    playericons.filter(function (d) {\n      // console.log(d);\n      return d.suspension1;\n    }).append('path').attr(\"class\", \"suspension bench1\").attr(\"transform\", function (d) {\n      return \"translate(\" + getIconX(d, 1) + \",\" + 0 + \")\";\n    }).attr(\"d\", suspensionIconPath);\n    playericons.filter(function (d) {\n      // console.log(d);\n      return d.suspension2;\n    }).append('path').attr(\"class\", \"suspension bench2\").attr(\"transform\", function (d) {\n      return \"translate(\" + getIconX(d, 2) + \",\" + 0 + \")\";\n    }).attr(\"d\", suspensionIconPath);\n    playericons.filter(function (d) {\n      // console.log(d);\n      return d.suspension3;\n    }).append('path').attr(\"class\", \"suspension bench3\").attr(\"transform\", function (d) {\n      return \"translate(\" + getIconX(d, 3) + \",\" + 0 + \")\";\n    }).attr(\"d\", suspensionIconPath);\n  } // ----------- END helpers --------------------\n  // ============= main =================\n  // console.log(\"Game Graph\");\n  // create an svg container\n\n\n  var chartsvg = d3.select(\"#gamegraphframe\").append(\"svg:svg\").attr(\"id\", \"gamegraph\").attr(\"class\", \"hidden\"); // only make visible if data loaded\n  // Append 'g' for the different sections\n\n  var section_gameinfo = chartsvg.append(\"g\");\n  var rect_gameinfo = section_gameinfo.append('rect') // .attr(\"fill\", \"red\")\n  .attr(\"class\", \"section gameinfo\");\n  var section_display = chartsvg.append(\"g\");\n  var rect_display = section_display.append('rect') // .attr(\"fill\", \"green\")\n  .attr(\"class\", \"section display\");\n  var section_players = chartsvg.append(\"g\");\n  var rect_players = section_players.append('rect') // .attr(\"fill\", \"blue\")\n  .attr(\"class\", \"section players\");\n  var section_graph = chartsvg.append(\"g\");\n  var rect_graph = section_graph.append('rect') // .attr(\"fill\", \"orange\")\n  .attr(\"class\", \"section graph\");\n  var playerProfileBox = section_players.append(\"g\").attr(\"id\", \"playerprofiles\").attr(\"transform\", \"translate(\" + 0 + \",\" + chartMargin.top + \")\"); // Graph setup\n  // define the x scale  (vertical)\n\n  var xScale = d3.scale.linear();\n  var yScale = d3.scale.linear(); // define the x axis\n\n  var getAxisX = d3.svg.axis().orient(\"top\").tickValues(getGoalTicks()).tickFormat(function (d) {\n    return Math.abs(d);\n  }).tickSize(5).scale(xScale);\n  var getGridX = d3.svg.axis().orient(\"top\").tickValues(getGoalTicks()).tickFormat(\"\").scale(xScale); // define the y axis\n\n  var getAxisY = d3.svg.axis().orient(\"left\").tickValues(getTimeTicks()).tickFormat(function (d) {\n    return formatTime(d);\n  }).tickSize(5).scale(yScale);\n  var getGridY = d3.svg.axis().orient(\"left\").tickValues(getTimeTicks()).tickFormat(\"\").scale(yScale); // Append 'g' in a place that is the actual area for the graph\n\n  var chart = section_graph.append(\"g\").attr(\"transform\", \"translate(\" + chartMargin.left + \",\" + chartMargin.top + \")\"); // draw axis \n\n  var xAxis = chart.append(\"g\").attr(\"class\", \"axis xaxis\");\n  var yAxis = chart.append(\"g\").attr(\"class\", \"axis yaxis\"); // draw grid\n\n  var xGrid = chart.append(\"g\").attr(\"class\", \"grid\");\n  var yGrid = chart.append(\"g\").attr(\"class\", \"grid\");\n  var scoreline = chart.append(\"path\").attr(\"id\", \"scoreline\").attr(\"class\", \"line\");\n  var valueline = d3.svg.line().x(function (d) {\n    return xScale(parseInt(d.scoreDiff));\n  }).y(function (d) {\n    return yScale(d.time);\n  }); // Add centerline\n\n  var centerline = chart.append(\"path\").attr(\"class\", \"center-line\"); // Add halftime line\n\n  var halftimeLine = chart.append(\"path\").attr(\"class\", \"halftime-line\");\n  var actionTagBox = section_graph.append(\"g\").attr(\"id\", \"allactiontags\");\n  var scoreboard = section_display.append(\"g\").attr(\"id\", \"scoreboard\").attr(\"class\", \"score\"); // =========== slider ============\n  // scale function for slider\n\n  var timeScale = d3.scale.linear() // .domain([yMin, yMax]) //TODO\n  // .range([0, 111  ])\n  .clamp(true);\n  var brush = d3.svg.brush();\n  var sliderBox = section_graph.append(\"g\").attr(\"class\", \"sliderbox\");\n  var sliderAxis = sliderBox.append(\"g\").attr(\"class\", \"y axis\");\n  var slider = sliderBox.append(\"g\").attr(\"class\", \"slider\");\n  var handle = slider.append(\"g\").attr(\"class\", \"handle\");\n  var brushed;\n\n  function initializeGraph() {\n    // console.log('initializeGraph');\n    initializeScoreboard();\n    timeScale.domain([sliderMin, sliderMax]) // .domain([0, 100])\n    .range([0, sliderHeight]);\n    brush.y(timeScale).extent([sliderstart, sliderstart]); // defines brush\n\n    brush.on(\"brush\", brushed);\n    sliderAxis // put in middle of screen\n    .attr(\"transform\", \"translate(\" + sliderWidth / 2 + \",\" + 0 + \")\") // inroduce axis\n    .call(d3.svg.axis().scale(timeScale).orient(\"left\").tickSize(0).tickPadding(12).tickValues([timeScale.domain()[0], timeScale.domain()[1]]).tickFormat(function (d) {\n      return formatTime(d);\n    })).select(\".domain\").select(function () {\n      // console.log(this);\n      return this.parentNode.appendChild(this.cloneNode(true));\n    }).attr(\"class\", \"halo\");\n    slider.selectAll(\".extent,.resize\").remove();\n    slider.select(\".background\").attr(\"transform\", \"translate(\" + 0 + \",\" + 0 + \")\").style(\"cursor\", \"pointer\").attr(\"width\", sliderWidth);\n    handle.append(\"path\").attr(\"transform\", \"translate(\" + sliderWidth / 2 + \",\" + 0 + \")\").attr(\"d\", \"M \" + -handleWidth + \" 0 H \" + handleWidth);\n    handle.append('text').text(sliderstart).attr(\"transform\", \"translate(\" + sliderWidth + \",\" + 6 + \")\");\n    sliderBox.attr(\"class\", \"sliderbox\");\n    slider.call(brush); // slider\n    // \t.call(brush.event);\n  }\n\n  function updateData(selectedGameId, callback) {\n    // Game report\n    var rows = Array.from(document.getElementsByClassName(\"gameInfo\")); // console.log(rows);\n\n    rows.forEach(function (element) {\n      // console.log(element);\n      element.classList.add(\"hidden\");\n    });\n    document.getElementById('gameReport_' + selectedGameId).classList.remove(\"hidden\"); // Game Graph\n\n    data = gamesData[selectedGameId]; // console.log(data);\n    // console.log(JSON.stringify(data,null,4));\n\n    gameinfo = data.gameinfo;\n    gamedata = data.gamedata;\n    playerdata = data.playerdata;\n    picarray = data.picarray;\n    playerdata = addPlayersPortraits(playerdata, picarray);\n    picWidthFactor = getPlayersPicWidthFactor();\n    /* clean up previous data */\n\n    document.getElementById('gamegraph').classList.add(\"hidden\"); // remove previous player profiles\n\n    while (playerProfileBox[0][0].firstChild) {\n      // console.log(playerProfileBox[0][0].firstChild);\n      playerProfileBox[0][0].removeChild(playerProfileBox[0][0].firstChild);\n    } // remove previous action tags\n\n\n    while (actionTagBox[0][0].firstChild) {\n      // console.log(playerProfileBox[0][0].firstChild);\n      actionTagBox[0][0].removeChild(actionTagBox[0][0].firstChild);\n    } // console.log(gamedata);\n\n\n    if (gamedata !== undefined && gamedata.length > 0) {\n      // console.log(gamedata);\n      document.getElementById('gamegraph-box').classList.remove(\"hidden\");\n      numGoals = getMaxGoalDiff(gamedata) + 1;\n      resize();\n      document.getElementById('gamegraph').classList.remove(\"hidden\"); // console.log(chartsvg);\n      // scoreboard.classList.remove(\"hidden\");\n\n      gamegraph.classList.remove(\"hidden\");\n      callback(selectedGameId);\n    } else {\n      document.getElementById('gamegraph-box').classList.add(\"hidden\");\n    }\n  }\n\n  function loadData(selectedGameId) {\n    // console.log(selectedGameId);\n    updateGraph(gamedata, 3600);\n    if (playerdata !== null) addPlayerProfiles(playerdata); // // =========== slider ============\n\n    brushed = function brushed() {\n      var value = brush.extent()[0]; // console.log(value);\n\n      if (d3.event.sourceEvent) {\n        value = timeScale.invert(d3.mouse(this)[1]);\n        brush.extent([value, value]);\n      } // only full integer: ~~()\n\n\n      updateEndTime(gamedata, ~~value);\n      var currIndex = findLatestAction(gamedata, ~~value);\n      updateScoreBoard(gamedata[currIndex]);\n      handle.attr(\"transform\", \"translate(0,\" + timeScale(value) + \")\");\n      handle.select('text').text(~~value);\n    }; // // defines brush\n\n\n    brush.on(\"brush\", brushed);\n    slider.call(brush);\n    slider.selectAll(\".extent,.resize\").remove();\n    slider.select(\".background\").attr(\"transform\", \"translate(\" + 0 + \",\" + 0 + \")\").style(\"cursor\", \"pointer\").attr(\"width\", sliderWidth); // handle = slider.append(\"g\")\n    // \t.attr(\"class\", \"handle\");\n    // handle.append(\"path\")\n    // \t.attr(\"transform\", \"translate(\" + sliderWidth / 2 + \",\" + 0 + \")\")\n    // \t.attr(\"d\", \"M \" + (-handleWidth) + \" 0 H \" + handleWidth)\n    // handle.append('text')\n    // \t.text(sliderstart)\n    // \t.attr(\"transform\", \"translate(\" + sliderWidth + \",\" + 6 + \")\");\n\n    slider.call(brush.event);\n  }\n\n  function updateGraph(data, endTime) {\n    // console.log(endTime);\n    populateData(data, endTime);\n    addActionTags(data);\n  }\n\n  function updateEndTime(data, endTime) {\n    // console.log(endTime);\n    scoreline.attr(\"d\", valueline(filterData(data, endTime)));\n    chart.selectAll(\".goaldot\").classed(\"showGoal\", function (d) {\n      return d.time > endTime;\n    });\n\n    if (endTime < 3600) {\n      var curr = findLatestAction(data, endTime);\n      showScore(data[curr].actionIndex);\n    }\n  }\n\n  function populateData(data, endTime) {\n    // console.log(endTime);\n    scoreline.attr(\"d\", valueline(filterData(data, endTime))); // TODO is selectAll(\".point\") necessary\n\n    chart.selectAll(\"#goaldots\").remove();\n    chart.append(\"g\").attr(\"id\", \"goaldots\").selectAll(\".point\").data(filterData(data, endTime)).enter().append(\"svg:circle\").attr(\"class\", function (d) {\n      return d.alias;\n    }).classed(\"goaldot\", true).attr(\"cx\", function (d) {\n      return xScale(d.scoreDiff);\n    }).attr(\"cy\", function (d) {\n      return yScale(d.time);\n    }).attr(\"r\", 3).on(\"mouseover\", function (d) {\n      showScore(d.actionIndex);\n    }).on(\"mouseout\", function (d) {\n      hideScore();\n    });\n  }\n\n  function showScore(item) {\n    hideScore();\n    var className; // console.log(item);\n\n    if (typeof item == 'string') {\n      // name\n      className = item;\n    } else {\n      className = \"event-\" + item;\n    } // console.log(className);\n\n\n    section_graph.selectAll(\".\" + className).classed(\"hideactiontag\", false);\n  }\n\n  function hideScore() {\n    // console.log('hide');\n    section_graph.selectAll(\".actionTagItem\").classed(\"hideactiontag\", true);\n  }\n\n  var addActionTags = function addActionTags(data) {\n    var widthAnnotations = 200;\n    var widthIcon = 8;\n    var widthTime = 57;\n    var annotationGap = 8; //TODO is selectAll necessary?\n\n    actionTagGroups = actionTagBox.selectAll(\".actiontagtest\").data(data).enter().append(\"g\").attr(\"transform\", function (d) {\n      return \"translate(\" + (xScale(-numGoals) - widthAnnotations + chartMargin.left - annotationGap) + \",\" + (chartMargin.top + yScale(d.time)) + \")\";\n    }).attr(\"class\", function (d) {\n      return \"actionTagItem icons \" + getPlayerAlias(d.name) + \" event-\" + d.actionIndex + \" \" + getTeamIndicator(d.team);\n    }).classed(\"hideactiontag\", true);\n    actionTagGroups.append(\"rect\").attr(\"class\", \"bg\").attr(\"x\", 0).attr(\"y\", -8).attr(\"width\", widthAnnotations).attr(\"height\", 16).attr(\"fill\", \"white\");\n    actionTagGroups.append(\"text\").attr(\"class\", \"time\").attr(\"dx\", widthAnnotations).attr(\"dy\", 5).text(function (d) {\n      return d.timeString;\n    });\n    actionTagGroups.append(\"text\").attr(\"class\", \"name\").attr(\"dx\", widthAnnotations - widthIcon - widthTime).attr(\"dy\", 5).text(function (d) {\n      return getActionText(d);\n    });\n    actionTagGroups.append(\"text\").attr(\"class\", \"info\").attr(\"dx\", widthAnnotations - widthIcon - widthTime).attr(\"dy\", 20).text(function (d) {\n      return getInfoText(d);\n    });\n    actionTagGroups.filter(function (d) {\n      // console.log(d.category);\n      return d.category === 'yellow';\n    }).append('rect').attr(\"class\", \"card yellowcard\").attr(\"width\", 10).attr(\"height\", 15).attr(\"x\", widthAnnotations - widthTime + 2).attr(\"y\", -8).attr(\"rx\", 2).attr(\"ry\", 2);\n    actionTagGroups.filter(function (d) {\n      // console.log(d.category);\n      return d.category === 'red';\n    }).append('rect').attr(\"class\", \"card redcard\").attr(\"width\", 10).attr(\"height\", 15).attr(\"x\", widthAnnotations - widthTime + 2).attr(\"y\", -8).attr(\"rx\", 2).attr(\"ry\", 2);\n    var actionballs = actionTagGroups.filter(function (d) {\n      // console.log(d.category);\n      return d.category === 'goal' || d.category === 'penalty' && d.scoreChange;\n    }).append(\"g\").attr(\"class\", \"ball\").attr(\"transform\", \"translate(\" + (widthAnnotations - widthTime) + \",\" + -7 + \"), scale(0.9)\");\n    actionballs.append(\"circle\").attr(\"class\", \"goal\").attr(\"cx\", 8).attr(\"cy\", 8.5).attr(\"r\", 7.5);\n    actionballs.append(\"path\").attr(\"d\", ballIconPath);\n    actionballs.filter(function (d) {\n      return d.category === 'penalty' && d.scoreChange;\n    }).append(\"text\").attr(\"class\", \"sevenicon\").attr(\"dx\", 13).attr(\"dy\", 14).text(\"7\");\n    actionTagGroups.filter(function (d) {\n      // console.log(d.category);\n      return d.category === 'suspension';\n    }).append('path').attr(\"class\", \"suspension\").attr(\"transform\", function (d) {\n      return \"translate(\" + (widthAnnotations - widthTime + 2) + \",\" + -8 + \")\";\n    }).attr(\"d\", suspensionIconPath);\n  };\n\n  function initializeScoreboard() {\n    scoreboard.append(\"rect\").attr(\"class\", \"background\").attr(\"width\", sbwidth + \"px\").attr(\"height\", sbheight + \"px\").attr(\"rx\", sbradius).attr(\"ry\", sbradius).text(\"0\");\n    scoreboard.append(\"rect\").attr(\"class\", \"frame\").attr(\"x\", sboffset + \"px\").attr(\"y\", sboffset + \"px\").attr(\"width\", sbwidth - 2 * sboffset + \"px\").attr(\"height\", sbheight - 2 * sboffset + \"px\").attr(\"rx\", sbradius).attr(\"ry\", sbradius).text(\"0\");\n    scoreboard.append(\"rect\").attr(\"class\", \"background\").attr(\"x\", 2 * sboffset + \"px\").attr(\"y\", 2 * sboffset + \"px\").attr(\"width\", sbwidth - 4 * sboffset + \"px\").attr(\"height\", sbheight - 4 * sboffset + \"px\").attr(\"rx\", sbradius).attr(\"ry\", sbradius).text(\"0\");\n    scoreboard.append(\"text\").attr(\"class\", \"team\").attr(\"x\", sbHome + \"px\").attr(\"y\", sbscoreline - 32 + \"px\").text(\"HEIM\");\n    scoreboard.append(\"text\").attr(\"class\", \"team\").attr(\"x\", sbAway + \"px\").attr(\"y\", sbscoreline - 32 + \"px\").text(\"GAST\");\n    scoreboard.append(\"text\").attr(\"class\", \"diget time bg\").attr(\"x\", sbwidth / 2 + \"px\").attr(\"y\", sbTime + \"px\").text(\"88 88\");\n    scoreboard.append(\"text\").attr(\"class\", \"diget time bg\").attr(\"x\", sbwidth / 2 + \"px\").attr(\"y\", sbTime + \"px\").text(\":\");\n    scoreboard.append(\"text\").attr(\"id\", \"scoreTime\").attr(\"class\", \"diget time\").attr(\"x\", sbwidth / 2 + \"px\").attr(\"y\", sbTime + \"px\").text(\"0\");\n    scoreboard.append(\"text\").attr(\"class\", \"diget score bg\").attr(\"x\", sbHome + \"px\").attr(\"y\", sbscoreline + \"px\").text(\"88\");\n    scoreboard.append(\"text\").attr(\"id\", \"scoreHome\").attr(\"class\", \"diget score\").attr(\"x\", sbHome + \"px\").attr(\"y\", sbscoreline + \"px\").text(\"0\");\n    scoreboard.append(\"text\").attr(\"class\", \"diget score bg\").attr(\"x\", sbAway + \"px\").attr(\"y\", sbscoreline + \"px\").text(\"88\");\n    scoreboard.append(\"text\").attr(\"id\", \"scoreAway\").attr(\"class\", \"diget score\").attr(\"x\", sbAway + \"px\").attr(\"y\", sbscoreline + \"px\").text(\"0\");\n  }\n\n  function updateScoreBoard(score) {\n    scoreboard.select(\"#scoreHome\").text(score.scoreHome);\n    scoreboard.select(\"#scoreAway\").text(score.scoreAway);\n    scoreboard.select(\"#scoreTime\").text(score.timeString.replace(':', ' '));\n  }\n\n  document.getElementById('gameSelect').onchange = function () {\n    var selectedGameId = this.value;\n    updateData(selectedGameId, loadData);\n  };\n\n  d3.select(window).on('resize', resize);\n});"],"file":"gamereport.js"}